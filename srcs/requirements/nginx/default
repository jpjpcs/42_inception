# Introductory comments with links to NGINX documentation for configuration guidance
##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Define the default server configuration block
# Default server configuration
#
server {

	# Commented-out line to listen on port 80 for HTTP (not used due to SSL focus)
	#listen 80 default_server; #Commented line

	# Commented-out line to listen on port 80 for IPv6 (not used)
	#listen [::]:80 default_server; #Commented line

	# Configure the server to listen on port 443 for HTTPS with SSL
	listen 443 ssl default_server;

	# Configure the server to listen on port 443 for IPv6 with SSL
	listen [::]:443 ssl default_server;

	# Specify allowed SSL/TLS protocols (TLSv1.2 and TLSv1.3)
	ssl_protocols TLSv1.2 TLSv1.3;

	# Set the path to the SSL certificate file using substituted variables
	ssl_certificate ${CRED_PATH}/${CRED_CERT}; #Value before: /etc/nginx/certs/nginx-selfsigned.crt;

	# Set the path to the SSL private key file using substituted variables
	ssl_certificate_key ${CRED_PATH}/${CRED_KEY}; #Value before: /etc/nginx/certs/nginx-selfsigned.key;

	# Set the document root directory for serving web content
	root /var/www/html;

	# Define default files to serve, prioritizing index.php for PHP applications
	# Add index.php to the list if you are using PHP
	index index.php index.html index.htm index.nginx-debian.html; #Value before:index index.html index.htm index.nginx-debian.html;

	# Set the server name (e.g., domain) using the COMMON_NAME variable
	server_name ${COMMON_NAME}; #Value before: jode-jes.42.fr;

	# Define a location block for handling root URL requests
	location / {
		# Attempt to serve the URI as a file, then directory, or return 404
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ =404;
	}

	# Define a location block for handling PHP files
	# pass PHP scripts to FastCGI server
	#
	location ~ \.php$ {
		# Include FastCGI configuration for PHP processing
		include snippets/fastcgi-php.conf;
	
		# Commented-out option for Unix socket FastCGI (not used)
		# With php-fpm (or other unix sockets):
		# fastcgi_pass unix:/run/php/php7.4-fpm.sock;

		# Commented-out option for TCP socket FastCGI (not used)
		# With php-cgi (or other tcp sockets):
		#fastcgi_pass 127.0.0.1:9000;

		# Forward PHP requests to the WordPress containerâ€™s PHP-FPM on port 9000
		 fastcgi_pass wordpress:9000;
	}

	# Commented-out block to deny access to .htaccess files (not needed for NGINX)
	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}
}

# Commented-out example virtual host configuration for another domain
# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#	listen 80;
#	listen [::]:80;
#
#	server_name example.com;
#
#	root /var/www/example.com;
#	index index.html;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}
